# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f009ea47-5fc6-4a29-8099-b3000b951482'
  imageRepositoryApiUserJava: 'karlosarr/api-user-java'
  imageRepositoryApiPio: 'karlosarr/api-poi'
  containerRegistry: 'openhackb4i6acr.azurecr.io'
  dockerfilePathApiUserJava: '$(Build.SourcesDirectory)/apis/user-java/Dockerfile'
  dockerfilePathApiPio: 'apis/poi/web/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildApiPio
  displayName: Api Pio
  jobs:
  - job: UnitTesting
    displayName: Unit Testing
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: GoTool@0
      inputs:
        version: '1.10'
    - task: Go@0
      inputs:
        command: 'test'
        workingDirectory: '$(Build.SourcesDirectory)/apis/poi'
  - job: Build
    displayName: Api Pio
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'Docker Hub'
        repository: '$(imageRepositoryApiPio)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePathApiPio)'
        tags: '$(tag)'
    - task: HelmInstaller@1
      displayName: Helm Install
      inputs:
        helmVersionToInstall: '2.14.1'
    - task: HelmDeploy@0
      displayName: Helm Package
      inputs:
        command: 'package'
        chartPath: 'apis/poi/charts/mydrive-poi'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    
- stage: BuildApiUserJava
  displayName: Api User Java
  jobs:
  - job: UnitTesting
    displayName: Unit Testing
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'apis/user-java/pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        testRunTitle: 'testpractice'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
  - job: BuildApiUserJava
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'apis/user-java/pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        testRunTitle: 'testpractice'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'Docker Hub'
        repository: '$(imageRepositoryApiUserJava)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePathApiUserJava)'
        tags: '$(tag)'
    - task: HelmInstaller@1
      displayName: Helm Install
      inputs:
        helmVersionToInstall: '2.14.1'
    - task: HelmDeploy@0
      displayName: Helm Package
      inputs:
        command: 'package'
        chartPath: 'apis/user-java/charts/mydrive-user-java'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'